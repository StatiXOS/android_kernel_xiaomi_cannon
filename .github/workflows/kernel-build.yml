name: Kernel Build CI

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: toolchain
      run: git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 -b android-11.0.0_r35 ~/tc/clang && git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/ -b android-11.0.0_r35 ~/tc/gcc64
    - name: Set build date
      id: get-date
      run: |
        echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
    - name: When is this building
      run: |
        echo 'Building on ${{ steps.get-date.outputs.date }}'
    - name: configure
      run: make O=out ARCH=arm64 cannong_user_defconfig
    - name: make
      run: |
        export PATH=~/tc/clang/clang-r353983c1/bin:$PATH
        make O=out ARCH=arm64 CC=clang LD=ld.lld CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=~/tc/gcc64/bin/aarch64-linux-android- -j$(nproc --all)
    - name: Kernel Image
      run: cp out/arch/arm64/boot/Image.gz-dtb eva-kernel-${{ steps.get-date.outputs.date }}.gz
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         draft: true
         prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./eva-kernel-${{ steps.get-date.outputs.date }}.gz
        asset_name: eva-kernel-${{ steps.get-date.outputs.date }}.gz
        asset_content_type: application/gz